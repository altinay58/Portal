@model Portal.Models.Randevu
@{
    ViewBag.Title = "Randevu Kaydet";
}
@using (@Html.BeginForm("RandevuKaydet", "SatisBolumu", FormMethod.Post,
                                                                 new { id = "ekleForm" }))
{
   
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(x => x.RandevuID)
        @Html.HiddenFor(model => model.RandevuRefArayanID)
        @Html.HiddenFor(model => model.RandevuRefFirmaID)
        @Html.HiddenFor(model => model.RandevuSilDurum)
        @Html.HiddenFor(model => model.RandevuKayitTarihi)
        <div class="alert alert-danger display-hide">
            <button class="close" data-close="alert"></button> Bazı alanları hatalı girdiniz! Lütfen formu kontrol ediniz.
        </div>
        <div class="alert alert-success display-hide">
            <button class="close" data-close="alert"></button> Form validasyonu başarılı!
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">
                Randevu Tarihi
            </label>
            <div class="col-md-4">
                <div class="input-group  date date-picker" data-date-format="dd.MM.yyyy">
                   @if (Model.RandevuTarihi.HasValue)
                   {
                    <input type="text" is-date="1" class="form-control" name="RandevuTarihi" id="Tarih" data-date-format="dd.mm.yyyy" 
                           value="@Model.RandevuTarihi.Value.ToString("dd.MM.yyyy")">
                   }
                   else
                   {
                    <input type="text" is-date="1" class="form-control" name="RandevuTarihi" id="Tarih" data-date-format="dd.mm.yyyy">
                   }
                   
                    <span class="input-group-btn">
                        <button class="btn default" type="button">
                            <i class="fa fa-calendar"></i>
                        </button>

                    </span>
                    <div class="input-group">
                        @if (Model.RandevuTarihi.HasValue)
                        {
                            <input type="text" name="SaatDakika" class="form-control timepicker timepicker-24" style="width:50px;padding:2px"
                                   value="@Model.RandevuTarihi.Value.ToString("HH:mm")">
                        }
                        else
                        {
                            <input type="text" name="SaatDakika" class="form-control timepicker timepicker-24" style="width:50px;padding:2px">
                        }
                       
                        <span class="input-group-btn">
                            <button class="btn default" type="button">
                                <i class="fa fa-clock-o"></i>
                            </button>
                        </span>
                    </div>

                </div>
            </div>
        </div>       
        <div class="form-group">
            <label class="control-label col-md-2">
                Firma Adı
            </label>
            <div class="col-md-4">
                @if (Model.Firma != null)
                {
                    <input id="firmaAdi" type="text" class="form-control" name="firmaAdi" value="@Model.Firma.FirmaAdi" />
                    <input id="RandevuRefFirmaID" type="hidden" class="form-control" name="RandevuRefFirmaID" value="@Model.RandevuRefFirmaID" />
                    <input type="hidden" id="RandevuRefArayanID" name="RandevuRefArayanID" value="@Model.RandevuRefArayanID" />
                }
                 else if (Model.Arayanlar != null)
                {
                    <input id="firmaAdi" type="text" class="form-control" name="firmaAdi" value="@Model.Arayanlar.arayanFirmaAdi" />
                    <input id="RandevuRefFirmaID" type="hidden" class="form-control" name="RandevuRefFirmaID" value="" />
                    <input type="hidden" id="RandevuRefArayanID" name="RandevuRefArayanID" value="@Model.RandevuRefArayanID" />
                }
                else
                {
                    <input id="firmaAdi" type="text" class="form-control" name="firmaAdi" value="" />
                    <input id="RandevuRefFirmaID" type="hidden" class="form-control" name="RandevuRefFirmaID" value="" />
                    <input type="hidden" id="RandevuRefArayanID" name="RandevuRefArayanID" value="" />
                }


            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">
                Detay
            </label>
            <div class="col-md-10">
                @Html.TextAreaFor(x => x.RandevuDetay, new { @class = "ckeditor form-control" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">
                Randevu Yeri
            </label>
            <div class="col-md-4">
                @Html.TextBoxFor(model => model.RandevuYeri, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">
                Randevu Sorumlusu
            </label>
            <div class="col-md-4">
                @Html.DropDownList("RandevuYetkiliKisiID", ViewBag.arayanSektorID as SelectList, new { @class = "form-control select2" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-1">
                <button type="submit" class="btn green">Kaydet</button>
            </div>
            <div class="col-md-1">
                <a href="/SatisBolumu/Randevular" class="btn blue">Randevular</a>
            </div>
        </div>
    </div>
}


@section css{
    <link href="/Content/assets/global/plugins/select2/css/select2.min.css" rel="stylesheet" type="text/css" />
    <link href="/Content/assets/global/plugins/select2/css/select2-bootstrap.min.css" rel="stylesheet" type="text/css" />
    <link href="/Content/assets/global/plugins/bootstrap-datepicker/css/bootstrap-datepicker3.min.css" rel="stylesheet" type="text/css" />
<link href="/Content/assets/global/plugins/bootstrap-timepicker/css/bootstrap-timepicker.min.css" rel="stylesheet" type="text/css" />

    <style>
        .datepicker.dropdown-menu {
            z-index: 9999 !important;
        }

        .autocomplete-suggestions {
            border: 1px solid #999;
            background: #FFF;
            overflow: auto;
        }

        .autocomplete-suggestion {
            padding: 2px 5px;
            white-space: nowrap;
            overflow: hidden;
        }

        .autocomplete-selected {
            background: #F0F0F0;
        }

        .autocomplete-suggestions strong {
            font-weight: normal;
            color: #3399FF;
        }

        .autocomplete-group {
            padding: 2px 5px;
        }

            .autocomplete-group strong {
                display: block;
                border-bottom: 1px solid #000;
            }
    </style>

}
@section scripts{
    <script src="/js/jquery.autocomplete.js"></script>
    <script src="/Content/assets/global/plugins/jquery-validation/js/jquery.validate.min.js"></script>
    <script src="/Content/assets/global/plugins/moment.min.js" type="text/javascript"></script>

    <script src="/Content/assets/global/plugins/bootstrap-datepicker/js/bootstrap-datepicker.min.js" type="text/javascript"></script>
<script src="/Content/assets/global/plugins/ckeditor/ckeditor.js" type="text/javascript"></script>
<script src="/Content/assets/global/plugins/select2/js/select2.full.min.js" type="text/javascript"></script>
<script src="/Content/assets/global/plugins/bootstrap-timepicker/js/bootstrap-timepicker.min.js" type="text/javascript"></script>
    <script>
     
        $(function () {
            validateForm();
            $(".select2").select2();
            $("#firmaAdi").autocomplete({
                minChars: 2,
                transformResult: function (response) {                  
                    return {
                        suggestions: $.map(response, function (dataItem) {
                            return { value: dataItem["label"], data: dataItem["value"], kayitlimi: dataItem.Kayitlimi };
                        })
                    };
                },
                onSearchStart: function (query) {

                },
                paramName: 'firmaAdi',
                serviceUrl: '/Isler/FirmalariGetir',
                onSelect: function (suggestion) {
                   
                    if (suggestion.kayitlimi) {
                        $("#RandevuRefFirmaID").val(suggestion.data);
                        $("#RandevuRefArayanID").val("");
                    } else {
                        $("#RandevuRefArayanID").val(suggestion.data);
                        $("#RandevuRefFirmaID").val("");
                    }
                    //$("#RandevuRefFirmaID").val(suggestion.data);
                },
                dataType: "json",
                noCache: true,
                tabDisabled: true
            });
            $.fn.datepicker.dates['tr'] = {
                days: ["Pazar", "Pazartesi", "Salı", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"],
                daysShort: ["Paz", "Pzt", "Sal", "Çar", "Per", "Cum", "Cmt", "Paz"],
                daysMin: ["Paz", "Pzt", "Sal", "Çar", "Per", "Cum", "Cmt", "Paz"],
                months: ["Ocak", "Şubat", "Mart", "Nisan", "Mayıs", "Haziran", "Temmuz", "Ağustos", "Eylül", "Ekim", "Kasım", "Aralık"],
                monthsShort: ["Oca", "Şub", "Mar", "Nis", "May", "Haz", "Tem", "Ağu", "Eyl", "Eki", "Kas", "Ara"],
                today: "Bugün"
            };
            let yetkili='@Model.RandevuYetkiliKisiID';
            if (yetkili != "") {
                $("#RandevuYetkiliKisiID").val(yetkili).change();
            }
           

            $("input[is-date='1']").datepicker({
                autoclose: true,
                language: 'tr'
            });
            $(".timepicker-24").timepicker({
                autoclose: true,
                minuteStep: 5,
                showSeconds: false,
                showMeridian: false
            })

            $(".timepicker").parent(".input-group").on("click", ".input-group-btn", function (t) {
                t.preventDefault(), $(this).parent(".input-group").find(".timepicker").timepicker("showWidget")
            });
            if ($("input[is-date='1']").val() == "") {
                $("input[is-date='1']").val("@System.DateTime.Today.ToString("dd.MM.yyyy")");
            }
            
            $("input[is-date='1']").datepicker('update');
            $("input[is-date='1']").parent('.input-group').on('click', '.input-group-btn', function (e) {
                e.preventDefault();
                $(this).parent('.input-group').find("input[is-date='1']").datepicker('show');
            });
        })
        function validateForm() {
            //**validation
            var form1 = $('#ekleForm');
            var error1 = $('.alert-danger', form1);
            var success1 = $('.alert-success', form1);

            form1.validate({
                errorElement: 'span', //default input error message container
                errorClass: 'help-block help-block-error', // default input error message class
                focusInvalid: false, // do not focus the last invalid input
                ignore: "",  // validate all fields including form hidden input
                messages: {
                    firmaAdi: "Zorunlu alan.",
                    RandevuYeri: "Zorunlu alan."                  
                },
                rules: {
                    firmaAdi: {
                        minlength: 2,
                        required: true
                    },
                    RandevuYeri: {
                        minlength: 2,
                        required: true
                    }

                },

                invalidHandler: function (event, validator) { //display error alert on form submit
                    success1.hide();
                    error1.show();
                    App.scrollTo(error1, -200);
                },

                highlight: function (element) { // hightlight error inputs
                    $(element)
                        .closest('.form-group').addClass('has-error'); // set error class to the control group
                },

                unhighlight: function (element) { // revert the change done by hightlight
                    $(element)
                        .closest('.form-group').removeClass('has-error'); // set error class to the control group
                },

                success: function (label) {
                    label
                        .closest('.form-group').removeClass('has-error'); // set success class to the control group
                },

                submitHandler: function (form) {
                    //success1.show();
                    //error1.hide();
                    $('#ekleForm')[0].submit();
                }
            });




            //**end validation
        }
    </script>

}






