@model Portal.Models.DomainNot
@{
    ViewBag.Title = "DomainNoteEkle";
}
@using (@Html.BeginForm("DomainNoteEkle", "Domain", FormMethod.Post,
                                         new { id = "ekleForm" }))
{
 
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(x=>x.DomainNotId)
        <div class="alert alert-danger display-hide">
            <button class="close" data-close="alert"></button> Bazı alanları hatalı girdiniz! Lütfen formu kontrol ediniz.
        </div>
        <div class="alert alert-success display-hide">
            <button class="close" data-close="alert"></button> Form validasyonu başarılı!
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">
               Note
            </label>
            <div class="col-md-4">              
                @Html.TextBoxFor(model=>model.DomainNotNot,new { @class="form-control"})
                @Html.ValidationMessageFor(model => model.DomainNotNot, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">
                Domain
            </label>
            <div class="col-md-4">
                @if (Model.Domain != null)
                {
                    <input id="domainAdi" type="text" class="form-control" name="domainAdi" value="@Model.Domain.DomainAdi" />
                    <input id="domainId" type="hidden" class="form-control" name="RefDomainId" value="@Model.Domain.DomainID" />
                }
                else
                {
                    <input id="domainAdi" type="text" class="form-control" name="domainAdi" value="" />
                    <input id="domainId" type="hidden" class="form-control" name="RefDomainId" value="" />
                }


            </div>
        </div>
      
        @*<div class="form-group">
            <label class="control-label col-md-2">
                Tarih
            </label>
            <div class="col-md-4">    

                <div class="input-group">
                    <input type="text" is-date="1" class="form-control" name="DomainNotTarih" id="tarih" data-date-format="dd.mm.yyyy">
                    <span class="input-group-btn">
                        <button class="btn default" type="button">
                            <i class="fa fa-calendar"></i>
                        </button>

                    </span>
                </div>
            </div>
        </div>*@ 

        <div class="form-group">
            <div class="col-md-offset-2 col-md-4">
                <button type="submit" class="btn green">Kaydet</button>
            </div>
        </div>
    </div>
 }


@section css{
    <link href="/Content/assets/global/plugins/select2/css/select2.min.css" rel="stylesheet" type="text/css" />
    <link href="/Content/assets/global/plugins/select2/css/select2-bootstrap.min.css" rel="stylesheet" type="text/css" />
    <link href="/Content/assets/global/plugins/bootstrap-datepicker/css/bootstrap-datepicker3.min.css" rel="stylesheet" type="text/css" />
 

    <style>
        .datepicker.dropdown-menu {
            z-index: 9999 !important;
        }
        .autocomplete-suggestions { border: 1px solid #999; background: #FFF; overflow: auto; }
.autocomplete-suggestion { padding: 2px 5px; white-space: nowrap; overflow: hidden; }
.autocomplete-selected { background: #F0F0F0; }
.autocomplete-suggestions strong { font-weight: normal; color: #3399FF; }
.autocomplete-group { padding: 2px 5px; }
.autocomplete-group strong { display: block; border-bottom: 1px solid #000; }
    </style>

}
@section scripts{
    <script src="/js/jquery.autocomplete.js"></script>
    <script src="/Content/assets/global/plugins/jquery-validation/js/jquery.validate.min.js"></script>
    <script src="/Content/assets/global/plugins/moment.min.js" type="text/javascript"></script>

    <script src="/Content/assets/global/plugins/bootstrap-datepicker/js/bootstrap-datepicker.min.js" type="text/javascript"></script>
   
    <script>
       
        $(function () {
            validateForm();
            $("#domainAdi").autocomplete({
                minChars: 2,
                transformResult: function (response) {                
                    return {
                        suggestions: $.map(response, function (dataItem) {
                            return { value: dataItem["label"], data: dataItem["value"] };
                        })
                    };
                },
                onSearchStart: function (query) {

                },
                paramName: 'domainAdi',
                serviceUrl: '/Isler/DomainGetir',
                onSelect: function (suggestion) {
                    console.log(suggestion.data);
                    $("#domainId").val(suggestion.data);
                },
                dataType: "json",
                noCache: true,
                tabDisabled: true
            })

            @*$.fn.datepicker.dates['tr'] = {
                days: ["Pazar", "Pazartesi", "Salı", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"],
                daysShort: ["Paz", "Pzt", "Sal", "Çar", "Per", "Cum", "Cmt", "Paz"],
                daysMin: ["Paz", "Pzt", "Sal", "Çar", "Per", "Cum", "Cmt", "Paz"],
                months: ["Ocak", "Şubat", "Mart", "Nisan", "Mayıs", "Haziran", "Temmuz", "Ağustos", "Eylül", "Ekim", "Kasım", "Aralık"],
                monthsShort: ["Oca", "Şub", "Mar", "Nis", "May", "Haz", "Tem", "Ağu", "Eyl", "Eki", "Kas", "Ara"],
                today: "Bugün"
            };
            $("input[is-date='1']").datepicker({
                autoclose: true,
                language: 'tr'
            });
            $("input[is-date='1']").val("@System.DateTime.Today.ToString("dd.MM.yyyy")");
            $("input[is-date='1']").datepicker('update');
            $("input[is-date='1']").parent('.input-group').on('click', '.input-group-btn', function (e) {
                e.preventDefault();
                $(this).parent('.input-group').find("input[is-date='1']").datepicker('show');
            });*@
         
            
        })
        function validateForm() {
            //**validation
            var form1 = $('#ekleForm');
            var error1 = $('.alert-danger', form1);
            var success1 = $('.alert-success', form1);

            form1.validate({
                errorElement: 'span', //default input error message container
                errorClass: 'help-block help-block-error', // default input error message class
                focusInvalid: false, // do not focus the last invalid input
                ignore: "",  // validate all fields including form hidden input
                messages: {                  
                    DomainNotNot: "Lütfen Not  giriniz.",                   
                    domainAdi:"Lütfen bir domain seçiniz"

                },
                rules: {
                    DomainNotNot: {
                        minlength: 2,
                        required: true
                    },
                    domainAdi: {
                        minlength: 2,
                        required: true
                    }
                  
                },

                invalidHandler: function (event, validator) { //display error alert on form submit
                    success1.hide();
                    error1.show();
                    App.scrollTo(error1, -200);
                },

                highlight: function (element) { // hightlight error inputs
                    $(element)
                        .closest('.form-group').addClass('has-error'); // set error class to the control group
                },

                unhighlight: function (element) { // revert the change done by hightlight
                    $(element)
                        .closest('.form-group').removeClass('has-error'); // set error class to the control group
                },

                success: function (label) {
                    label
                        .closest('.form-group').removeClass('has-error'); // set success class to the control group
                },

                submitHandler: function (form) {
                    //success1.show();
                    //error1.hide();
                    $('#ekleForm')[0].submit();
                }
            });




            //**end validation
        }
    </script>

}
