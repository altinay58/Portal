@model Portal.Models.Domain

@{
    ViewBag.Title = "Ekle";
}


<h3 class="page-title"></h3>
@using (@Html.BeginForm("Ekle", "Domain", FormMethod.Post,
                 new { id = "ekleForm" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
  
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="alert alert-danger display-hide">
            <button class="close" data-close="alert"></button> Bazı alanları hatalı girdiniz! Lütfen formu kontrol ediniz.
        </div>
        <div class="alert alert-success display-hide">
            <button class="close" data-close="alert"></button> Form validasyonu başarılı!
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">
                Domain Adı
            </label>
            <div class="col-md-4">
                @Html.EditorFor(model => model.DomainAdi, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DomainAdi, "", new { @class = "text-danger" })
            </div>
        </div>     

        <div class="form-group">
            <label class="control-label col-md-2">
              Domain Kayıtlı Firma
            </label>
            <div class="col-md-4">
              
                    <select name="RefDomainKayitliFirmaId" class="form-control select2">
                        @{
                            foreach (Portal.Models.DomainKayitliFirma kayitliFirma in ViewBag.DomainKayitliFirmalar)
                            {
                                <option value="@(kayitliFirma.DomainKayitliFirmaId)">@(kayitliFirma.DomainKayitliFirmaAdi)</option>
                            }
                        }
                    </select>

              
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Hosting</label>
            <div class="col-md-4">
                <select name="RefHostingID" class="form-control select2">
                    @{
                        foreach (var h in ViewBag.Hostingler)
                        {
                            <option value="@(h.HostingID)">@(h.HostingAdi)</option>
                        }
                    }
                </select>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Tarih, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
              
                <div class="input-group  date date-picker" data-date-format="dd.MM.yyyy">
                    <input type="text" class="form-control" name="Tarih" id="Tarih" data-date-format="dd.mm.yyyy" >
                    <span class="input-group-btn">
                        <button class="btn default" type="button">
                            <i class="fa fa-calendar"></i>
                        </button>
                    </span>
                </div>
            </div>
        </div>    
        <div class="form-group">
            <label class="control-label col-md-2">
                Firma
            </label>
            <div class="col-md-4">
                <input type="text" id="FirmaAdi" name="FirmaAdi"  class="form-control" />
                <input type="hidden" id="RefDomainFirmaID" name="RefDomainFirmaID" />
            </div>
        </div>
       

        <div class="form-group">
            <label class="control-label col-md-2">Ip Adresi </label>
            <div class="col-md-4">
                @Html.EditorFor(model => model.IpAdres, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IpAdres, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Kategori</label>
            <div class="col-md-4">
                <select name="RefDomainKategori" class="form-control select2">
                    @{
                        foreach (var h in ViewBag.DomainKategorileri)
                        {
                            <option value="@(h.DomainKategoriID)">@(h.DomainKategoriAdi)</option>
                        }
                    }
                </select>
            </div>
        </div>
      

        <div class="form-group">
            <div class="col-md-offset-2 col-md-4">
                <button type="submit" class="btn green">Kaydet</button>
            </div>
        </div>
    </div>
}


@section css{
    <link href="/Content/assets/global/plugins/select2/css/select2.min.css" rel="stylesheet" type="text/css" />
    <link href="/Content/assets/global/plugins/select2/css/select2-bootstrap.min.css" rel="stylesheet" type="text/css" />
<link href="/Content/assets/global/plugins/bootstrap-datepicker/css/bootstrap-datepicker3.min.css" rel="stylesheet" type="text/css" />
<link href="/Content/assets/global/plugins/typeahead/typeahead.css" rel="stylesheet" type="text/css" />
    <style>
        .datepicker.dropdown-menu {
    z-index: 9999 !important;
}
    </style>

}
@section scripts{
    <script src="/Content/assets/global/plugins/select2/js/select2.full.min.js" type="text/javascript"></script>
    <script src="/Content/assets/global/plugins/jquery-validation/js/jquery.validate.min.js"></script>
<script src="/Content/assets/global/plugins/moment.min.js" type="text/javascript"></script>

<script src="/Content/assets/global/plugins/bootstrap-datepicker/js/bootstrap-datepicker.min.js" type="text/javascript"></script>
<script src="/Content/assets/global/plugins/typeahead/typeahead.bundle.min.js" type="text/javascript"></script>
    <script>
        var dd;
        $(function () {
            validateForm();
            $(".select2").select2();
           
            $.fn.datepicker.dates['tr'] = {
                days: ["Pazar", "Pazartesi", "Salı", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"],
                daysShort: ["Paz", "Pzt", "Sal", "Çar", "Per", "Cum", "Cmt", "Paz"],
                daysMin: ["Paz", "Pzt", "Sal", "Çar", "Per", "Cum", "Cmt", "Paz"],
                months: ["Ocak", "Şubat", "Mart", "Nisan", "Mayıs", "Haziran", "Temmuz", "Ağustos", "Eylül", "Ekim", "Kasım", "Aralık"],
                monthsShort: ["Oca", "Şub", "Mar", "Nis", "May", "Haz", "Tem", "Ağu", "Eyl", "Eki", "Kas", "Ara"],
                today: "Bugün"
            };
            $("#Tarih").datepicker({
                autoclose: true,
                todayHighlight: true,
                language: 'tr'
            });
            $('#Tarih').parent('.input-group').on('click', '.input-group-btn', function (e) {
                e.preventDefault();
                $(this).parent('.input-group').find('#Tarih').datepicker('show');
            });
            //$(document).scroll(function () {
            //    $('#Tarih').datepicker('place'); //#modal is the id of the modal
            //});
            // firma autocomplete
            var firmas = new Bloodhound({
                datumTokenizer: function (datum) {
                    return Bloodhound.tokenizers.whitespace(datum.label);
                },
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    wildcard: '',
                    url: '/Isler/FirmalariGetir',
                    replace: function (url, query) {
                        
                        url += "?firmaAdi=" + $("#FirmaAdi").val();

                        return url;
                    },
                    transform: function (response) {
                        return response;
                       
                    }
                }
            });
            $('#FirmaAdi').typeahead(null, {
                display: 'label',
                displayKey: 'value',
                hint: true,
                minLength: 1,
                source: firmas
            });

            $('#FirmaAdi').on('typeahead:selected', function (event, datum) {
                dd = datum;
                console.log(datum);
                $('#RefDomainFirmaID').val(datum.value);          

            });
            //Firma autocomplete 
        })
        function validateForm() {
            //**validation 
            var form1 = $('#ekleForm');
            var error1 = $('.alert-danger', form1);
            var success1 = $('.alert-success', form1);

            form1.validate({
                errorElement: 'span', //default input error message container
                errorClass: 'help-block help-block-error', // default input error message class
                focusInvalid: false, // do not focus the last invalid input
                ignore: "",  // validate all fields including form hidden input
                messages: {
                    FirmaAdi: "Lütfen firma ismi giriniz.",
                    DomainAdi: "Lütfen Domain adi giriniz.",
                    Tarih: "Lütfen tarih seçiniz.",
                    IpAdres:"Lütfen ip adresi giriniz."
                },
                rules: {
                    FirmaAdi: {
                        minlength: 2,
                        required: true
                    },
                    DomainAdi: {
                        minlength: 2,
                        required: true
                    },
                    Tarih: {
                        minlength: 9,
                        required: true
                    },
                    IpAdres: {
                        minlength: 9,
                        required: true
                    }

                },

                invalidHandler: function (event, validator) { //display error alert on form submit              
                    success1.hide();
                    error1.show();
                    App.scrollTo(error1, -200);
                },

                highlight: function (element) { // hightlight error inputs
                    $(element)
                        .closest('.form-group').addClass('has-error'); // set error class to the control group
                },

                unhighlight: function (element) { // revert the change done by hightlight
                    $(element)
                        .closest('.form-group').removeClass('has-error'); // set error class to the control group
                },

                success: function (label) {
                    label
                        .closest('.form-group').removeClass('has-error'); // set success class to the control group
                },

                submitHandler: function (form) {
                    //success1.show();
                    //error1.hide();
                    $('#ekleForm')[0].submit();
                }
            });




            //**end validation
        }
    </script>

}