@model IEnumerable<Portal.Models.Domain>
@using Portal.Extensions;
@using Portal.Controllers;
@using Portal.Extensions;
@using Portal.Models;
@{
    ViewBag.Title = "Domainler";
  
}

<form class="form-inline" action="/Domain/Domainler" role="form" style="background-color:#e7ecf1">
    <div class="form-group">
        <input type="text" value="@ViewData["queryData"]" class="form-control" name="ara" placeholder="Domain Ara..." />
    </div>
    <div class="form-group">
        <select class="form-control" name="aramaType">
            @foreach (var item in (Dictionary<string,string>)ViewBag.aramatypes)
            {
                if (item.Key == (string)ViewData["aramaType"])
                {
                    <option value="@item.Key" selected="selected">@item.Value</option>
                }
                else
                {
                    <option value="@item.Key">@item.Value</option>
                }
            }
      
        </select>
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-default green">Ara</button>
    </div>

  
</form>
<div class="portlet-body flip-scroll">
    <table class="table table-bordered table-striped table-condensed flip-content">
        <thead class="flip-content">
            @Html.Partial("_DomainUstSatiri")
        </thead>
        <tbody>
            @{ foreach (Portal.Models.Domain domainVerisi in ViewData.Model)
            {
                    @Html.Partial("_DomainSatiri", domainVerisi)
                }
            }
        </tbody>
    </table>
</div>
@Html.Partial("_Modal")
<div style="text-align:center">
    <div class="pagination">
        @*@MvcHtmlString.Create(ViewBag.Sayfalama)*@
        @if (ViewBag.Sayfalama.TotalCount > 0)
        {
            @Html.Pager(ViewBag.Sayfalama as PaginatedList, ViewData["queryData"] as string, (int? page, HtmlHelper htmlHelper, string queryData) =>
                            string.Format("{0}", this.Html.BuildUrlFromExpressionFG<DomainController>(c => c.Domainler(page, queryData, (string)ViewData["aramaType"]))))
        }

    </div>
</div>

@section css{
 
    <link href="/Content/assets/global/plugins/bootstrap-editable/bootstrap-editable/css/bootstrap-editable.css" rel="stylesheet" type="text/css" />
}
@section scripts{
<script>
    function gosterDomain(domain) {
        commonAjaxService.getDomainInfo(domain).done(function (data) {
            $("#domainInfo .modal-title").html("Domain Sorgula")
            $("#domainInfo .modal-body").html(data);
            $("#domainInfo").modal("show");
        });
    }
    function domainUzatmaMailiGonder(btn, domainAdi, domainId) {


        if (confirm( domainAdi +' Domain Uzatılacak  Maili Gönderilecek Emin misiniz?'))
        {
            $(btn).addClass("disabled");
            $(btn).html("Gönderiliyor..");
            commonAjaxService.domainUzatmaMailiGonder(domainId).done(function (data) {
                $("#domainInfo").modal("show");
                $("#domainInfo .modal-title").html("Mail Cevap");
                $(btn).removeClass("disabled");
                $(btn).html("Mail Gönder");
                if (data.Basarilimi) {

                    $("#domainInfo .modal-body").html('Gönderildi');

                } else {
                    $("#domainInfo .modal-body").html('Hata oldu,gönderilemedi');
                }
            });
        }

    }

</script>
    <script src="/Content/assets/global/plugins/bootstrap-editable/bootstrap-editable/js/bootstrap-editable.js" type="text/javascript"></script>
    <script>
        var qq;
    $(function () {
         $.fn.editable.defaults.mode = 'popup';
          qq=$('.table-striped .domain-note').editable({
            url: '/Domain/ColumnNoteEkle',
            //params: { domainId: $(this).data('pk'), note: $(this).data('name') },
            type: 'text',
            name: 'Note',
            title: 'Not Giriniz',
            success: function (response, newValue) {
                console.log(newValue);
                //userModel.set('username', newValue); //update backbone model
            }
        });
    })
    </script>
}


