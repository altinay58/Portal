@model IEnumerable<Portal.Models.Domain>
@using Portal.Extensions;
@using Portal.Controllers;
@using Portal.Extensions;
@using Portal.Models;
@{
    ViewBag.Title = "Domainler";
}


<div class="row">
    <div class="col-md-3">
        <input type="text" class="form-control" name="txtAra" placeholder="Domain Ara..." />
    </div>
</div>
<div class="row" style="margin-top:5px;margin-bottom:5px">
    <div class="col-md-3">
        <input type="text" class="form-control" name="txtTarih" placeholder="Uzatma Tarihine Göre" />
    </div>
    <div class="col-md-3">
        <input type="text" class="form-control" name="txtAlfabetik" placeholder="Alfabetik" />
    </div>
    <div class="col-md-3">
        <input type="text" class="form-control" name="txtHosting" placeholder="Hosting" />
    </div>
    <div class="col-md-3">
        <input type="text" class="form-control" name="txtIp" placeholder="IP" />
    </div>
</div>

<div class="portlet-body flip-scroll">
    <table class="table table-bordered table-striped table-condensed flip-content">
        <thead class="flip-content">
            @Html.Partial("_DomainUstSatiri")
        </thead>
        <tbody>
            @{ foreach (Portal.Models.Domain domainVerisi in ViewData.Model)
            {
                    @Html.Partial("_DomainSatiri", domainVerisi)
                }
            }
        </tbody>
    </table>
</div>
<div class="pagination">
    @*@MvcHtmlString.Create(ViewBag.Sayfalama)*@
    @if (ViewBag.Sayfalama.TotalCount > 0)
    {
        @Html.Pager(ViewBag.Sayfalama as PaginatedList, ViewData["queryData"] as string, (int? page, HtmlHelper htmlHelper, string queryData) =>
                            string.Format("{0}", this.Html.BuildUrlFromExpressionFG<DomainController>(c => c.Domainler(page))))
    }
    
</div>