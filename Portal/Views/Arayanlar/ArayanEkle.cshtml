@model ArayanModel
@using Portal.Models.ArayanlarModels;
@{
    ViewBag.Title = "ArayanEkle";
}

<form class="form-horizontal" id="arayanEkle" name="arayanEkle" method="post" action="@Url.Action("ArayanEkle","Arayanlar")">
 @Html.AntiForgeryToken()
    <div style="margin:0 auto;width:95%">
        <div class="form-body">
            <div class="form-group">

                <label class="control-label col-md-2">Firma Adı</label>
                <div class="col-md-4">
                  
                    @Html.TextBoxFor(x=>x.arayanFirmaAdi,new {@class="form-control" })
                    <input type="hidden" name="arayanKayitliRefFirmaID" id="arayanKayitliRefFirmaID" />
                    <input type="hidden" name="Kayitlimi" />
                </div>
                <label class="control-label col-md-2">Adı</label>
                <div class="col-md-4">
                   @Html.TextBoxFor(x => x.arayanAdi, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">

                <label class="control-label col-md-2">Soyadı</label>
                <div class="col-md-4">
                    @Html.TextBoxFor(x => x.arayanSoyadi, new { @class = "form-control" })
                   
                </div>
                <label class="control-label col-md-2">Firma Sahibi Özellik</label>
                <div class="col-md-4">
                    @Html.TextBoxFor(x => x.arayanFirmaSahibiOzelligi, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2">Aracı Varmı</label>
                <div class="col-md-4">

                
                    <div class="input-group">
                        <span class="input-group-btn">
                            <label class="input-group-btn mt-checkbox mt-checkbox-outline" >
                              @Html.CheckBoxFor(x=>x.araciVarmi,new { id = "cbAraciVarmi", onchange = "degistiAraci()" })
                              
                                <span></span>
                            </label>
                        </span>
                        <div id="wrpAraci">
                            <label class="control-label" style="float:left;padding-right:3px">Aracı Adı</label>
                            <input type="text" name="ArayanAraciAdi" id="ArayanAraciAdi" class="form-control" style="width:77%" >
                        </div>
                       
                       
                           
                           
                     </div>
                </div>
                <label class="control-label col-md-2">Telefon No</label>
                <div class="col-md-3">
                    <input type="text" name="arayanTelefonNo" class="form-control phone_us" />
                </div>


            </div>
            <div class="form-group">

                <label class="control-label col-md-2">Cep Tel No</label>
                <div class="col-md-4">
                    @Html.TextBoxFor(x=>x.arayanCepTelNo,new {@class= "form-control phone_us" })
                </div>
                <label class="control-label col-md-2">Mail Adresi</label>
                <div class="col-md-4">
                    @Html.TextBoxFor(x => x.arayanMailAdresi, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2">Web Adresi</label>
                <div class="col-md-4">
                    @Html.TextAreaFor(x => x.arayanWebAdresi, new { @class = "form-control" })
                </div>
                <label class="control-label col-md-2">Tam Adresi</label>
                <div class="col-md-4">
                    @Html.TextAreaFor(x => x.arayanAdres, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2">Şehir</label>
                <div class="col-md-4">
                    @Html.TextBoxFor(x => x.arayanSehir, new { @class = "form-control" })
                </div>
                <label class="control-label col-md-2">İlçe</label>
                <div class="col-md-4">
                    @Html.TextBoxFor(x => x.arayanilce, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2">Bölge Adı</label>
                <div class="col-md-4">
                    @Html.DropDownList("arayanRefKonumID", ViewBag.arayanRefKonumID as SelectList, new { @class = "form-control select2" })
                </div>
                <label class="control-label col-md-2">Konu</label>
                <div class="col-md-4">
                    @Html.TextAreaFor(x => x.arayanKonu, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2">Not</label>
                <div class="col-md-4">
                    @Html.TextAreaFor(x => x.arayanNot, new { @class = "form-control" })
                </div>
                <label class="control-label col-md-2">Beğenilen Web Siteleri</label>
                <div class="col-md-4">
                    @Html.TextAreaFor(x => x.arayanBegendigiWebSiteleri, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2">Tarih</label>
                <div class="col-md-4">

                
                    <div class="input-group  date date-picker" data-date-format="dd.MM.yyyy">
                        <input type="text" is-date="1" class="form-control" name="arayanKayitTarih" id="Tarih" data-date-format="dd.mm.yyyy">
                        <span class="input-group-btn">
                            <button class="btn default" type="button">
                                <i class="fa fa-calendar"></i>
                            </button>
                           
                        </span>
                        <div class="input-group">
                            <input type="text" name="SaatDakika" class="form-control timepicker timepicker-24" style="width:50px;padding:2px">
                            <span class="input-group-btn">
                                <button class="btn default" type="button">
                                    <i class="fa fa-clock-o"></i>
                                </button>
                            </span>
                        </div>
                    
                    </div>
                </div>
                <label class="control-label col-md-2">Proje Tipi</label>
                <div class="col-md-3">
                    @Html.DropDownList("arayanDomainKategoriID", ViewBag.arayanDomainKategoriID as SelectList, new { @class = "form-control select2" })
                </div>
               
               
            </div>
            <div class="form-group">
                <label class="control-label col-md-2">Sektör Adı</label>
                <div class="col-md-4">
                    @Html.DropDownList("arayanSektorID", ViewBag.arayanSektorID as SelectList, new { @class = "form-control select2" })
                </div>
                <label class="control-label col-md-2">Mail Şabşonları</label>
                <div class="col-md-4">
                    @Html.DropDownList("mailSablonlari", ViewBag.arayanSektorID as SelectList,String.Empty, new { @class = "form-control select2" })
                </div>
            </div>
           
            <div class="form-group" style="margin-left:2px">               
                <label class="col-md-offset-2 mt-checkbox mt-checkbox-outline">  
                    @Html.CheckBoxFor(x=>x.isEkle,new { id= "cbIsEkle" })İş Ekle                
                    @*<input type="checkbox" name="isEkle"   id="cbIsEkle">İş ekle*@  
                    <span></span>
                </label>
             
            </div>
            <div id="divIs" style="display:block">
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-3">
                        <input name="isAdi" class="form-control" placeholder="iş adı" />
                    </div>

                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <textarea class="ckeditor form-control" name="isAciklama" rows="6"></textarea>
                    </div>

                </div>
                
                    <div class="col-md-offset-2 col-md-10">
                        <div class="row">
                          
                                <div class="col-md-3 box">
                                    <div class="form-group">
                                        <label class="">Yapacak Kişi</label>
                                        @Html.DropDownList("islerisiYapacakKisi", ViewBag.islerisiYapacakKisi as SelectList, new { @class = "form-control select2" })
                                    </div>
                                </div>
                                <div class="col-md-3 box">
                                    <div class="form-group">
                                        <label class="">Kontrol Eden</label>
                                        @Html.DropDownList("kontrolEdecekKisi", ViewBag.islerisiYapacakKisi as SelectList, new { @class = "form-control select2" })
                                    </div>
                                </div>
                                <div class="col-md-3 box">
                                    <div class="form-group">
                                        <label class="">Domain</label>
                                        <input type="text" name="domainAdi" id="domainAdi" class="form-control" />
                                        <input type="hidden" name="domainId" id="domainId"  />
                                    </div>
                                </div>
                                <div class="col-md-3 box">
                                    <div class="form-group">
                                      @*<label class="">                   
                        <input type="checkbox" value="" class="iCheck" id="cbDeadline" name="deadline">Bitirme Tarihi                      
                    </label>*@
                                        <label class="mt-checkbox mt-checkbox-outline" style="margin-bottom:6px">
                                            @*<input type="checkbox" name="BitirmeTarihiVarmi">Bitirme Tarihi*@
                                            @Html.CheckBoxFor(x => x.BitirmeTarihiVarmi)Bitirme Tarihi
                                            <span></span>
                                        </label>
                                        <div class="input-group">
                                            <input type="text" is-date="1" class="form-control" name="bitirmeTarihi" id="deadline" data-date-format="dd.mm.yyyy" style="width:100% !important">
                                            <span class="input-group-btn">
                                                <button class="btn default" type="button">
                                                    <i class="fa fa-calendar"></i>
                                                </button>

                                            </span>
                                        </div>
                                       
                                    </div>
                                </div>
                            <div class="col-md-3 box">
                                <div class="form-group">
                                    <label class="">Geliş Yöntemi</label>
                                    <select name="gelisYonetemi" class="form-control select2">
                                        <option selected="selected">Telefon</option>
                                        <option>Email</option>
                                        <option>Whatsapp</option>
                                        <option>Yüz yüze</option>
                                    </select> 
                                </div>
                            </div>
                        </div>
                    </div>

              
            </div>
            <div class="form-group">
                <label class="col-md-offset-2 col-md-2">
                    <button type="submit" class="btn green">Kaydet</button>
                </label>

            </div>
       
          
        </div>
    </div>
</form>

@section css{
<link href="/Content/assets/global/plugins/icheck/skins/all.css" rel="stylesheet" type="text/css" />
    <link href="/Content/assets/global/plugins/select2/css/select2.min.css" rel="stylesheet" type="text/css" />
    <link href="/Content/assets/global/plugins/select2/css/select2-bootstrap.min.css" rel="stylesheet" type="text/css" />
    <link href="/Content/assets/global/plugins/bootstrap-datepicker/css/bootstrap-datepicker3.min.css" rel="stylesheet" type="text/css" />
    <link href="/Content/assets/global/plugins/typeahead/typeahead.css" rel="stylesheet" type="text/css" />
<link href="/Content/assets/global/plugins/bootstrap-datetimepicker/css/bootstrap-datetimepicker.min.css" rel="stylesheet" type="text/css" />
<link href="/Content/assets/global/plugins/bootstrap-timepicker/css/bootstrap-timepicker.min.css" rel="stylesheet" type="text/css" />
    <style>
 
        .datepicker.dropdown-menu {
            z-index: 9999 !important;
        }
    </style>
    <style>
        #whoisbilgileri {
            height: 500px;
            width: 100%;
            overflow-y: auto;
            overflow-x: hidden;
        }
         .mt-checkbox, .mt-radio {
            font-size: 10px;
        }
    </style>
}
@section scripts{
<script src="/Content/assets/global/plugins/icheck/icheck.min.js" type="text/javascript"></script> 
<script src="/Content/assets/global/plugins/ckeditor/ckeditor.js" type="text/javascript"></script>
<script src="/Content/assets/global/plugins/moment.min.js" type="text/javascript"></script>

<script src="/Content/assets/global/plugins/bootstrap-datepicker/js/bootstrap-datepicker.min.js" type="text/javascript"></script>
<script src="/Content/assets/global/plugins/bootstrap-timepicker/js/bootstrap-timepicker.min.js" type="text/javascript"></script>
<script src="/Content/assets/global/plugins/bootstrap-datetimepicker/js/bootstrap-datetimepicker.min.js" type="text/javascript"></script>
    <script src="/Content/assets/global/plugins/select2/js/select2.full.min.js" type="text/javascript"></script>
    <script src="/Content/assets/global/plugins/jquery-validation/js/jquery.validate.min.js"></script> 
    <script src="/Content/assets/global/plugins/typeahead/typeahead.bundle.min.js" type="text/javascript"></script>
<script src="/Content/assets/global/plugins/jquery-inputmask/jquery.inputmask.bundle.min.js" type="text/javascript"></script>
@*<script src="/Content/assets/pages/scripts/ui-bootstrap-growl.min.js" type="text/javascript"></script>*@
<script src="http://ifightcrime.github.io/bootstrap-growl/jquery.bootstrap-growl.min.js"></script>
    <script>
        var aryAutoKeys = {};
        window.onload = function () {
            $("#divIs").css("display", "none");
            $("#wrpAraci").css("display", "none");
        }
        function degistiAraci() {
            if ($("#cbAraciVarmi").is(":checked")) {
                $("#wrpAraci").css("display", "block");
            } else {
                $("#wrpAraci").css("display", "none");
            }
        }
        $(function () {
           
            $('.phone_us').inputmask("mask", {
                "mask": "(9999) 999-99-99", autoUnmask: true
            });
            $("#cbIsEkle").change(function () {
                if ($(this).is(":checked")) {
                    $("#divIs").css("display", "block");
                } else {
                    $("#divIs").css("display", "none");
                }
            });
            validateForm();
            $(".select2").select2();

            $.fn.datepicker.dates['tr'] = {
                days: ["Pazar", "Pazartesi", "Salı", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"],
                daysShort: ["Paz", "Pzt", "Sal", "Çar", "Per", "Cum", "Cmt", "Paz"],
                daysMin: ["Paz", "Pzt", "Sal", "Çar", "Per", "Cum", "Cmt", "Paz"],
                months: ["Ocak", "Şubat", "Mart", "Nisan", "Mayıs", "Haziran", "Temmuz", "Ağustos", "Eylül", "Ekim", "Kasım", "Aralık"],
                monthsShort: ["Oca", "Şub", "Mar", "Nis", "May", "Haz", "Tem", "Ağu", "Eyl", "Eki", "Kas", "Ara"],
                today: "Bugün"
            };


            $("input[is-date='1']").datepicker({
                autoclose: true,
                language: 'tr'
            });
            $(".timepicker-24").timepicker({
                autoclose: true,
                minuteStep: 5,
                showSeconds: false,
                showMeridian: false
            })

            $(".timepicker").parent(".input-group").on("click", ".input-group-btn", function (t) {
                t.preventDefault(), $(this).parent(".input-group").find(".timepicker").timepicker("showWidget")
            })
            $("input[is-date='1']").val("@System.DateTime.Today.ToString("dd.MM.yyyy")");
            $("input[is-date='1']").datepicker('update');
            $("input[is-date='1']").parent('.input-group').on('click', '.input-group-btn', function (e) {
                e.preventDefault();
                $(this).parent('.input-group').find("input[is-date='1']").datepicker('show');
            });
            var aryElm = ["arayanFirmaAdi", "arayanTelefonNo", "arayanCepTelNo", "arayanMailAdresi"];
            aryAutoKeys = {
                "arayanFirmaAdi": { val: "value", lab: "label" },
                "arayanTelefonNo": { val: "Telefon1", lab: "Telefon1" },
                "arayanCepTelNo": { val: "Telefon2", lab: "Telefon2" },
                "arayanMailAdresi": { val: "Email", lab: "Email" }
            }
            var firmas = new Bloodhound({
                datumTokenizer: function (datum) {
                    return Bloodhound.tokenizers.whitespace(aryAutoKeys[$(':focus').attr("name")].lab); //(datum.label);
                },
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    wildcard: '',
                    url: '/Isler/FirmalariGetir',
                    replace: function (url, query) {
                        var fid = $(':focus').attr("name");
                       
                        if (aryElm.indexOf(fid) >= 0) {
                            url += "?firmaAdi=" + $("input[name='" + fid+"']").val();
                            
                            return url;
                        } else {
                           
                            return "";
                        }
                       
                    },
                    transform: function (response) {
                        return response;

                    }
                }
            });
          
          
            aryElm.forEach(function (e) {
                var ekey = $("input[name='" + e+"']").attr("name");
                console.log(ekey + ":" + aryAutoKeys[ekey].lab);
                var elabel = aryAutoKeys[ekey].lab;
                var evalue = aryAutoKeys[ekey].val;
                $("input[name='" + e + "']").typeahead(null, {
                    display: elabel, //'label',
                    displayKey: evalue,// 'value',
                    hint: true,
                    minLength: 1,
                    source: firmas
                });
                $("input[name='" + e + "']").on('typeahead:selected', function (event, datum) {
                    setData(datum);                    
                });
               
            });
          

          
            var domains = new Bloodhound({
                datumTokenizer: function (datum) {
                    return Bloodhound.tokenizers.whitespace(datum.label);
                },
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    wildcard: '%domainAdi',
                    url: '/Isler/DomainGetir',
                    replace: function (url, query) {
                        url += '?domainAdi=' + encodeURIComponent($("#domainAdi").val()) + '&firmaId=';
                      
                        url += encodeURIComponent($('#arayanKayitliRefFirmaID').val());

                       
                        return url;
                    },

                    transform: function (response) {

                        return response;
                       
                    }
                }
            });

            // Instantiate the Typeahead UI
            $('#domainAdi').typeahead(null, {
                display: 'label',
                displayKey: 'value',
                hint: true,
                minLength: 1,
                source: domains
            });
            $('#domainAdi').on('typeahead:selected', function (event, datum) {
                $('#domainId').val(datum.value);
            });
        });
        function setData(datum) {
            $("#divIs").css("display", "none");
            $('#cbIsEkle').removeAttr("disabled");
            var msj = "Yeni Firma";
            if (datum.Kayitlimi) {
                $('#arayanKayitliRefFirmaID').val(datum.value);
                $('#cbIsEkle').removeAttr("disabled");
                msj = "Kayıtlı Firma";
            } else {
                $('#cbIsEkle').attr("disabled", "disabled");
            }
            $.bootstrapGrowl(msj, {
                ele: 'body', // which element to append to
                type: 'info', // (null, 'info', 'danger', 'success')
                offset: { from: 'top', amount: 50 }, // 'top', or 'bottom'
                align: 'right', // ('left', 'right', or 'center')
                width: 250, // (integer, or 'auto')
                delay: 1500, // Time while the message will be displayed. It's not equivalent to the *demo* timeOut!
                allow_dismiss: true, // If true then will display a cross to close the popup.
                stackup_spacing: 10 // spacing between consecutively stacked growls.
            });
            $("#arayanFirmaAdi").val(datum.label.split("/")[0]);
            $('#arayanAdi').val(datum.Adi);
            $('#arayanSoyadi').val(datum.Adi);
            $('#arayanFirmaSahibiOzelligi').val(datum.Adi);
            $('#arayanTelefonNo').val(datum.Telefon1);
            $('#arayanCepTelNo').val(datum.Telefon2);
            $('#arayanMailAdresi').val(datum.Email);
            $('#arayanWebAdresi').val(datum.WebAdresi);
            $('#arayanAdres').val(datum.Adres);

            $('#arayanSehir').val(datum.Sehir);
            $('#arayanilce').val(datum.ilce);

            $('#arayanRefKonumID').val(datum.KonumId).change();
            //$('#arayanKonu').val(datum.Adres);
            $('#arayanDomainKategoriID').val(datum.DomainKategoriId).change();

            $('#arayanSektorID').val(datum.SektorId).change();
            $('#arayanSektorID').val(datum.Kayitlimi);
        }
        function addRule() {
            $.validator.addMethod('isEkli', function (value, element, param) {
                
                if ($("#cbIsEkle").is(":checked")) {
                    if ($(element).val().length >= 3) {
                        return true;
                    } else {
                        return false;
                    }
                } else {
                    return true;
                }
                return isValid; 
            }, 'Zorunlu alan.');
        }
        function validateForm() {
            addRule();
            //**validation
            var form1 = $('#arayanEkle');
            var error1 = $('.alert-danger', form1);
            var success1 = $('.alert-success', form1);

            form1.validate({
                errorElement: 'span', //default input error message container
                errorClass: 'help-block help-block-error', // default input error message class
                focusInvalid: false, // do not focus the last invalid input
                ignore: "",  // validate all fields including form hidden input
                messages: {
                    arayanFirmaAdi: "Lütfen firma ismi giriniz.",
                    arayanAdi: "Lütfen arayan adi giriniz.",
                    arayanCepTelNo: "Lütfen telefon numarası  giriniz.",
                    arayanTelefonNo: "Lütfen telefon numarası  giriniz."
                  
                },
                rules: {
                    FirmaAdi: {
                        minlength: 2,
                        required: true
                    },
                    arayanAdi: {
                        minlength: 2,
                        required: true
                    },
                    arayanCepTelNo: {
                        minlength: 9,
                        required: true
                    },
                    arayanTelefonNo: {
                        minlength: 9,
                        required: true
                    },
                    isAdi: {
                        isEkli: true
                    },
                    isAciklama: {
                        isEkli: true
                    },
                    domainAdi: {
                        isEkli: true
                    }

                },

                invalidHandler: function (event, validator) { //display error alert on form submit
                    success1.hide();
                    error1.show();
                    App.scrollTo(error1, -200);
                },

                highlight: function (element) { // hightlight error inputs
                    $(element)
                        .closest('.form-group').addClass('has-error'); // set error class to the control group
                },

                unhighlight: function (element) { // revert the change done by hightlight
                    $(element)
                        .closest('.form-group').removeClass('has-error'); // set error class to the control group
                },

                success: function (label) {
                    label
                        .closest('.form-group').removeClass('has-error'); // set success class to the control group
                },

                submitHandler: function (form) {
                    //success1.show();
                    //error1.hide();
                    $('#arayanEkle')[0].submit();
                }
            });




            //**end validation
        }
    </script>
}
